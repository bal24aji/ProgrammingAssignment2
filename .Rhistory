complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/")
nobs <- sum(complete.cases(file_i))
data <- rbindi, nobs)
}
colnames(data) <- c("id", "nobs")
data
}
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/")
nobs <- sum(complete.cases(file_i))
data <- rbind(i, nobs)
}
colnames(data) <- c("id", "nobs")
data
}
data <- data.frame()
i=1:132
nobs=1:132
data <- rbind(i, nobs)
data
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- rbind(i, nobs)
}
colnames(data) <- c("id", "nobs")
data
}
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", c(2, 4))
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- rbind(i, nobs)
}
data
}
complete("specdata", c(2, 4))
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- cbind(i, nobs)
}
colnames(data) <- c("id", "nobs")
data
}
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- cbind(i, nobs)
}
data
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- rbind(i, nobs)
}
data
}
complete("specdata", c(2, 4, 8, 10, 12))
directory = "specdata"
files <- list.files(directory)
files
data <- data.frame()
file_i <- read.csv(paste(directory, files[1],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- rbind(1, nobs)
data
file_i <- read.csv(paste(directory, files[2],sep="/"))
nobs <- sum(complete.cases(file_i)
nobs <- sum(complete.cases(file_i))
data
data <- rbind(2, nobs)
data
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- rbind(data, i, nobs)
}
data
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- rbind(data, dataframe(i, nobs))
}
data
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- rbind(data, i, nobs))
}
data
}
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- rbind(data, i, nobs)
}
data
}
complete("specdata", c(2, 4, 8, 10, 12))
class(data)
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- c(data, i, nobs)
}
data
}
complete("specdata", c(2, 4, 8, 10, 12))
class(data)
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data_i <- data.frame(i, nobs)
data <- rbind(data, data_i)
}
data
}
complete("specdata", c(2, 4, 8, 10, 12))
class(data)
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data <- rbind(data, i, nobs)
}
data
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data_i <- data.frame(i, nobs)
data <- rbind(data, data_i)
}
data
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data_i <- data.frame(i, nobs)
data <- rbind(data, data_i)
}
data
colnames(data) <- c("id", "nobs")
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:332) {
files <- list.files(directory)
data <- data.frame()
for (i in id) {
file_i <- read.csv(paste(directory, files[i],sep="/"))
nobs <- sum(complete.cases(file_i))
data_i <- data.frame(i, nobs)
data <- rbind(data, data_i)
}
colnames(data) <- c("id", "nobs")
data
}
complete("specdata", c(2, 4, 8, 10, 12))
function(directory, threshold = 0)
{
files <- list.files(directory)
numvect <- vector(mode = "numeric", length = 0)
for (i in 1:length(files))
{
file_i <- read.csv(paste(directory, files[i],sep="/"))
coc <- sum((!is.na(file_i$sulfate)) & (!is.na(file_i$nitrate)))
if (coc > threshold)
{
file_i = file_i[complete.cases(file_i), ]
numvect = c(numvect, cor(file_i$sulfate, file_i$nitrate))
} }
numvect
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0)
{
files <- list.files(directory)
numvect <- vector(mode = "numeric", length = 0)
for (i in 1:length(files))
{
file_i <- read.csv(paste(directory, files[i],sep="/"))
coc <- sum((!is.na(file_i$sulfate)) & (!is.na(file_i$nitrate)))
if (coc > threshold)
{
file_i = file_i[complete.cases(file_i), ]
numvect = c(numvect, cor(file_i$sulfate, file_i$nitrate))
} }
numvect
}
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
getwd()
list.files()
source("pollutantmean.R")
pollutantmean()
pollutantmean
corr <- function(directory, threshold = 0)
{
files <- list.files(directory)
numvect <- vector(mode = "numeric", length = 0)
for (i in 1:length(files))
{
file_i <- read.csv(paste(directory, files[i],sep="/"))
coc <- sum((!is.na(file_i$sulfate)) & (!is.na(file_i$nitrate)))
if (coc > threshold)
{
file_i = file_i[complete.cases(file_i), ]
numvect = c(numvect, cor(file_i$sulfate, file_i$nitrate))
} }
numvect
}
cr <- corr("specdata", 400)
head(cr)
coc
corr <- function(directory, threshold = 0)
{
files <- list.files(directory)
numvect <- vector(mode = "numeric", length = 0)
for (i in 1:length(files))
{
file_i <- read.csv(paste(directory, files[i],sep="/"))
coc <- sum((!is.na(file_i$sulfate)) & (!is.na(file_i$nitrate)))
if (coc > threshold)
{
file_i = file_i[complete.cases(file_i), ]
numvect = c(numvect, cor(file_i$sulfate, file_i$nitrate))
} }
coc}
cr <- corr("specdata", 400)
head(cr)
corr <- function(directory, threshold = 0)
{
files <- list.files(directory)
numvect <- vector(mode = "numeric", length = 0)
for (i in 1:length(files))
{
file_i <- read.csv(paste(directory, files[i],sep="/"))
coc <- complete.cases(file_i)
if (coc > threshold)
{
file_i = file_i[complete.cases(file_i), ]
numvect = c(numvect, cor(file_i$sulfate, file_i$nitrate))
} }
numvect
}
cr <- corr("specdata", 400)
head(cr)
?complete.cases
corr <- function(directory, threshold = 0)
{
files <- list.files(directory)
numvect <- vector(mode = "numeric", length = 0)
for (i in 1:length(files))
{
file_i <- read.csv(paste(directory, files[i],sep="/"))
coc <- sum(complete.cases(file_i))
if (coc > threshold)
{
file_i = file_i[complete.cases(file_i), ]
numvect = c(numvect, cor(file_i$sulfate, file_i$nitrate))
} }
coc
}
cr <- corr("specdata", 400)
head(cr)
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata")
summary(cr)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
source("complete.R")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
source("corr.R")
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
class(flags)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
iris
mean(iris$Sepal.Length [iris$Species=="virginica"],na.rm=TRUE)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
apply(mtcars, 2, mean)
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
x <- tapply(mtcars$hp, mtcars$cyl, mean)
x
x['8'] - x['4']
debug(ls)
ls()
library(datasets)
data(iris)
iris
library(datasets)
data(iris)
iris
head(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
getwd()
setwd("C:\Users\Balaji Ramesh\Desktop\Coursera\GIT Clone\ProgrammingAssignment2")
setwd(C:\Users\Balaji Ramesh\Desktop\Coursera\GIT Clone\ProgrammingAssignment2)
setwd(dir = setwd("C:\Users\Balaji Ramesh\Desktop\Coursera\GIT Clone\ProgrammingAssignment2"))
setwd("C:\Users\Balaji Ramesh\Desktop\Coursera\GIT Clone\ProgrammingAssignment2")
setwd("C:/Users/Balaji Ramesh/Desktop/Coursera/GIT Clone/ProgrammingAssignment2")
getwd()
source("cachematrix.R")
a <- diag(5,3)
CachedMarix <- makeCacheMatrix(a)
cacheSolve(CachedMarix)
b <- diag(2,6)
CachedMarix <- makeCacheMatrix(b)
cacheSolve(CachedMarix)
cacheSolve(CachedMarix)
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix$get()
my_matrix$getInverse()
my_matrix$getinverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$getinverse()
my_matrix$set(matrix(c(2, 2, 1, 4), 2, 2))
my_matrix$get()
my_matrix$getinverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$getinverse()
source('C:/Users/Balaji Ramesh/Desktop/Coursera/GIT Clone/ProgrammingAssignment2/cachematrix.R')
my_matrix <- makeCacheMatrix(matrix(1:4, 2, 2))
my_matrix$get()
my_matrix$getinverse()
cacheSolve(my_matrix)
cacheSolve(my_matrix)
my_matrix$getinverse()
source('C:/Users/Balaji Ramesh/Desktop/Coursera/GIT Clone/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/Balaji Ramesh/Desktop/Coursera/GIT Clone/ProgrammingAssignment2/cachematrix.R')
